# TODO
# Only run setup.sql if on a "fresh" database


---
version: "3.9"  # optional since v1.27.0
services:

  balancer:
    build:
      context: .
      target: balancer
    ports:
      # default namespace : container namespace
      - "8080:8080"
    env_file:
      - ./envs/balancer.env
    networks:
      - mynet
    environment:
      - NODENUM=1
      - NODEADDRESS0=http://receiver:8083
    depends_on:
      - receiver

  cache:
    build:
      context: .
      target: cache
    environment:
      - DBHOST=postgresdb
    depends_on:
      - postgresdb
    networks:
      - mynet

  settler:
    build:
      context: .
      target: settler
    ports:
      # default namespace : container namespace
      - "8082:8082"
    env_file:
      - ./envs/settler.env
    environment:
      - PORT=8082
      - CACHEADDRESS=http://cache:8081/settle
    networks:
      - mynet
    depends_on:
      - cache

  receiver:
    build:
      context: .
      target: receiver
    env_file:
      - ./envs/postgres.env
      - ./envs/receiver.env
    environment:
      - DBHOST=postgresdb
      - CACHEADDRESS=http://cache:8081/balance
    networks:
      - mynet
    depends_on:
      - cache

  mngdb:
    image: mongo
    restart: always
    volumes:
      - mongodata:/var/lib/mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=polka
      - MONGO_INITDB_ROOT_PASSWORD=polkapass
      - MONGO_INITDB_DATABASE=payments
    networks:
      - mynet

  postgresdb:
    image: postgres
    restart: always
    # ports:
    #   - "5433:5432"
    volumes:
      - ./dbinit/setup.sql:/docker-entrypoint-initdb.d/init.sql
      - pgdata:/var/lib/postgresql
    environment:
      POSTGRES_USER: polka
      POSTGRES_DB: payments
      POSTGRES_PASSWORD: polkapass
    networks:
      - mynet

volumes:
  dbinit:
  pgdata:
  mongodata:
networks:
  mynet: